import{_ as e,c as s,o as t,ag as i}from"./chunks/framework.B3HI_LuJ.js";const _=JSON.parse('{"title":"4-启动数据清洗-以 libian_crawler 为例","description":"","frontmatter":{},"headers":[],"relativePath":"develop/data_cleaner_ci/start-data-clean.md","filePath":"develop/data_cleaner_ci/start-data-clean.md","lastUpdated":1741758090000}'),l={name:"develop/data_cleaner_ci/start-data-clean.md"};function n(r,a,c,d,p,o){return t(),s("div",null,a[0]||(a[0]=[i('<h1 id="_4-启动数据清洗-以-libian-crawler-为例" tabindex="-1">4-启动数据清洗-以 libian_crawler 为例 <a class="header-anchor" href="#_4-启动数据清洗-以-libian-crawler-为例" aria-label="Permalink to &quot;4-启动数据清洗-以 libian_crawler 为例&quot;">​</a></h1><p>由于每个开发人员的数据库连接配置不同，因此请将自己的设置写在 <code>data_cleaner_ci_generated/config.json</code> 中，并且将其排除在版本管理外。</p><p>然后检查一下类型系统和测试用例有没有报错，如果报错的话可能是因为数仓的数据类型发生了变化、也可能是初始化后缺配置，需要手动调整。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deno</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prerun:check</span></span></code></pre></div><p>没问题的话就运行。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deno</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run:clean:libian_crawler</span></span></code></pre></div><p><code>clean_and_merge.ts</code> 脚本会先运行数据库迁移（在 <code>general_data_process/libian_crawler/migrations/</code> 目录下）， 然后读取在 <code>user_code/LibianCrawlerGarbage.ts</code> 中指定的迭代器，然后合并 ID 相同的多条数据（可能时间不同、也可能爬了很多次）， 最后将合并后的结果增量更新到 Postgres 中。</p>',7)]))}const k=e(l,[["render",n]]);export{_ as __pageData,k as default};
