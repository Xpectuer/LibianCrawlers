import{_ as e,c as t,o,a3 as d}from"./chunks/framework.w8luOYmq.js";const _=JSON.parse('{"title":"5-在数据清洗后进行二次开发","description":"","frontmatter":{},"headers":[],"relativePath":"develop/data_cleaner_ci/start-data-computed-after-clean.md","filePath":"develop/data_cleaner_ci/start-data-computed-after-clean.md","lastUpdated":1761553668000}'),r={name:"develop/data_cleaner_ci/start-data-computed-after-clean.md"};function c(l,a,n,s,i,h){return o(),t("div",null,a[0]||(a[0]=[d('<h1 id="_5-在数据清洗后进行二次开发" tabindex="-1">5-在数据清洗后进行二次开发 <a class="header-anchor" href="#_5-在数据清洗后进行二次开发" aria-label="Permalink to &quot;5-在数据清洗后进行二次开发&quot;">​</a></h1><p>在 <code>data_cleaner_ci/general_data_process/</code> 下的 <code>jobs/</code> 和 <code>nocodbutil.ts</code> 目录下，封装了基于 nocodb api 开发的数据二次开发实用工具。</p><h2 id="nocodbdataset" tabindex="-1">NocodbDataset <a class="header-anchor" href="#nocodbdataset" aria-label="Permalink to &quot;NocodbDataset&quot;">​</a></h2><h2 id="llm-数据分析" tabindex="-1">LLM 数据分析 <a class="header-anchor" href="#llm-数据分析" aria-label="Permalink to &quot;LLM 数据分析&quot;">​</a></h2><p><code>jobs/llmreq.ts</code> 封装了请求 LLM 的接口。并为常见的业务场景封装了常用策略。</p><h3 id="常见场景" tabindex="-1">常见场景 <a class="header-anchor" href="#常见场景" aria-label="Permalink to &quot;常见场景&quot;">​</a></h3><h4 id="当需要手动更正一些行时" tabindex="-1">当需要手动更正一些行时 <a class="header-anchor" href="#当需要手动更正一些行时" aria-label="Permalink to &quot;当需要手动更正一些行时&quot;">​</a></h4><p>经常听 LLM 胡说八道的小伙伴都知道，我们需要在数据集中修改某行的输出，不让甲方觉得我们分析的很烂。</p><blockquote><p>但这种操作由于职业分工的限制，通常会在 excel 表格中作最后更改，因此当下次输出结果时旧的数据还是会遗留。</p><p>更麻烦的是，后期还要合并两次的 excel ，这令人红温。</p></blockquote><p>因此脚本会创建一个 &quot;覆写&quot; Select 列，用来给运维人员提供手动修改功能。</p><h4 id="当需要局部新增或更新时" tabindex="-1">当需要局部新增或更新时 <a class="header-anchor" href="#当需要局部新增或更新时" aria-label="Permalink to &quot;当需要局部新增或更新时&quot;">​</a></h4><p>用过 pandas 的小伙伴都知道，当你 <code>df.map(llm_request)</code> 跑到一半时，要是你没有在中途输出你的 df 到磁盘，出了异常你就白跑了。</p><p>可即便输出 df 到磁盘，你也得写很多缓存检查的额外代码，这真是令人烦躁。</p><p>但是我们可以使用 nocodb 实现立刻写入，也可以借助 nocodb 做请求响应的缓存。</p><h4 id="提示词、列、-jsonschema-的更新" tabindex="-1">提示词、列、 jsonschema 的更新 <a class="header-anchor" href="#提示词、列、-jsonschema-的更新" aria-label="Permalink to &quot;提示词、列、 jsonschema 的更新&quot;">​</a></h4><p>提示词、列、jsonschema 这三者任何一个更新都会牵扯到其他值的更新。</p><h4 id="可见性" tabindex="-1">可见性 <a class="header-anchor" href="#可见性" aria-label="Permalink to &quot;可见性&quot;">​</a></h4><p>当</p>',18)]))}const m=e(r,[["render",c]]);export{_ as __pageData,m as default};
