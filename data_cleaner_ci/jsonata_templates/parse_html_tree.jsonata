(
    $tags := **[bs4_type="<class 'bs4.element.Tag'>"];
    {
        "xhs": (
            $author_username := $tags["author-container" in attrs.class].**["username" in attrs.class].str;
            $author_avater := $tags["author-container" in attrs.class].**["avatar-item" in attrs.class][name='img'].attrs.src;
            $author_link := $tags["author-container" in attrs.class].**[name='a'].attrs.href;
            $title := $tags[attrs.id='detail-title'].str;
            $desc := $join($tags[attrs.id='detail-desc'].**[bs4_type="<class 'bs4.element.Tag'>"][str].str);
            $bottom_gray_text := $tags["bottom-container" in attrs.class].**["date" in attrs.class].str;
            $like := $tags["engage-bar" in attrs.class].**["like-wrapper" in attrs.class].**["count" in attrs.class].str;
            $collect := $tags["engage-bar" in attrs.class].**["collect-wrapper" in attrs.class].**["count" in attrs.class].str;
            $comment := $tags["engage-bar" in attrs.class].**["chat-wrapper" in attrs.class].**["count" in attrs.class].str;
            
            $m := {
                "author_username": $distinct($author_username),
                "author_avater": $distinct($author_avater),
                "author_link": $distinct($author_link),
                "title": $distinct($title),
                "bottom_gray_text": $distinct($bottom_gray_text),
                "like": $distinct($like),
                "collect": $distinct($collect),
                "comment": $distinct($comment),
                "desc": $desc
            };
            $m
        ),
        "yangkeduo": (
            $window_raw_data := $tags[str][$contains(str, "window.rawData")].str;
            $window_raw_data_eval := $window_raw_data ? $deno_eval( $join(["let window={};" , $window_raw_data, "; console.log(JSON.stringify(window.rawData))"])) : null;
            $m := {
                "window_raw_data_eval": $window_raw_data_eval
            };
            $m
        ),
        "baidu": (
            $map_c_container := function($x) {(
                $r := {
                    "datatools": $json_parse($x.**[attrs.`data-tools`].attrs.`data-tools`),
                    "rows": $join($x.**[bs4_type="<class 'bs4.element.Tag'>"][str].str)
                };

                $r
            )};
            $results := $tags["c-container" in attrs.class].$map_c_container($);
            $m := {
                "results": $distinct($results) 
            };
            $m
        ),
        "cnki": (
            $trim2 := function($x) {(
                $trim($replace($replace($x, ";", ""),"；",""))
            )};

            $title := $tags["wx-tit" in attrs.class].**[name="h1"].**[$not(name="span") and str].str;
            $authors := $tags[attrs.id="authorpart"].**[name="a"].({ 
                "name": $.**[str and $not(name="sup")].str,
                "sup": $.**[name="sup"].str,
                "href": $.attrs.href
            });
            $author_organizations := $tags["author" in attrs.class and $not(attrs.id="authorpart")].**[name="a"].({ 
                "name": $.**[str and $not(name="sup")].str,
                "sup": $.**[name="sup"].str,
                "href": $.attrs.href
            });
            $summary := $join($tags[attrs.id="ChDivSummary"].**[str].str);
            $keywords := $tags["keywords" in attrs.class].**[bs4_type="<class 'bs4.element.Tag'>"][str].str.$trim2($);
            $funds := $tags["funds" in attrs.class].**[bs4_type="<class 'bs4.element.Tag'>"][str].str.$trim2($);
            $album := $tags[name="li" and "专辑：" in **.str].*[name="p"].str;
            $theme := $tags[name="li" and "专题：" in **.str].*[name="p"].str;
            $classification_number := $tags[name="li" and "分类号：" in **.str].*[name="p"].str;
            $public_time := $tags[name="li" and "在线公开时间：" in **.str].*[name="p"].str;
            $doi := $tags[name="li" and "DOI：" in **.str].*[name="p"].str;
            $journal := $tags["top-tip" in attrs.class].**[bs4_type="<class 'bs4.element.Tag'>" and name="a"][0].str;

            $m := { 
                "title": $trim($join($distinct($title))),
                "authors": $authors,
                "author_organizations": $author_organizations,
                "keywords": $distinct($keywords),
                "funds": $distinct($funds),
                "summary": $summary,
                "album": $album,
                "theme": $theme,
                "classification_number": $classification_number,
                "public_time": $public_time,
                "doi": $doi,
                "journal": $journal
            };
            $m
        ),
        "ref_works": ( 
            $is_string(g_content.result.obj.obj) ? $parse_ref_works(g_content.result.obj.obj) : null
        ),
        "qianniu_message_export": (
            $map_item := function($x) {(
                $r := {
                    "groupTime": $x.**[$contains($join(attrs.class),"groupTime")].str,
                    "chatTime": $x.**[$contains($join(attrs.class),"chatTime")].str,
                    "chatTextLeft": $x.**[$contains($join(attrs.class),"chatTextLeft")].str,
                    "chatName": $x.**[$contains($join(attrs.class),"chatName")].str,
                    "img": $x.**[name="img"].attrs.src
                };
                $r
            )};
            $shopname := $tags[$contains($join(attrs.class), "UserArea--shopName")].str;
            $shop_username := $tags[$contains($join(attrs.class), "UserArea--userName")].str;
            $shop_icon := $tags[$contains($join(attrs.class), "UserArea--icon")].attrs.src;
            $active_user_nickname := $tags["results-list-active" in attrs.class].str;
            $messages := $tags["message-list-right" in attrs.class].(
                $.*.*.$map_item($).$[$]
            );
            $m := {
                "messages": $messages,
                "active_user_nickname": $active_user_nickname,
                "shopname": $shopname,
                "shop_username": $shop_username,
                "shop_icon": $shop_icon
            };
            $m
        )
    }
)