name: "libian-datalake"

x-env: &env
  GENERIC_TIMEZONE: Asia/Shanghai
  TZ: Asia/Shanghai

services:
  postgres-db:
    image: postgres:17
    restart: always
    hostname: ${POSTGRES_HOSTNAME}
    env_file:
      - .env
    ports:
      - "18191:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      PGSSLMODE: verify-full
      POSTGRES_HOST_AUTH_METHOD: md5
      <<: *env
    healthcheck:
      interval: 10s
      retries: 10
      test: "pg_isready -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\""
      timeout: 2s
    volumes:
      - ./volume/db_data:/var/lib/postgresql/data
      - ./ca/server.crt:/var/lib/postgresql/server.crt:ro
      - ./ca/server.key:/var/lib/postgresql/server.key:ro
    command:
      - "-c"
      - "ssl=on"
      - "-c"
      - "ssl_cert_file=/var/lib/postgresql/server.crt"
      - "-c"
      - "ssl_key_file=/var/lib/postgresql/server.key"
  miniosnsd:
    image: "minio/minio:latest"
    # The internal domain name and port should be 
    # the same as the public domain name and port.
    #
    # Because nocodb backend uses the internal port, 
    # and the internal port will be exposed in the nocodb table data.
    hostname: ${MINIOSNSD_HOSTNAME}
    restart: always
    env_file:
      - .env
    ports:
      - "18194:${MINIOSNSD_BOTH_PORT}"
      - "18195:9001"
    environment:
      MINIO_CONFIG_ENV_FILE: /etc/config.env
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL}
      <<: *env
    volumes:
      - "./minio.config.env:/etc/config.env"
      - "./volume/miniosnsd_data:/mnt/data"
      - "./ca/minio-private.key:/root/.minio/certs/private.key:ro"
      - "./ca/minio-public.crt:/root/.minio/certs/public.crt:ro"
    healthcheck:
      test: ["CMD", "curl", "-k", "--silent", "--fail", "https://localhost:9001"]
      interval: 1m
      timeout: 20s
      retries: 5
      start_period: 5m
      start_interval: 30s
    command:
      - "server"
      - "--address"
      - ":${MINIOSNSD_BOTH_PORT}"
      - "--console-address"
      - ":9001"
  nocodb:
    image: "nocodb/nocodb:latest"
    restart: always
    ports:
      - "18193:8080"
    env_file:
      - .env
    depends_on:
      postgres-db:
        condition: service_healthy
      miniosnsd:
        condition: service_healthy
    environment:
      NC_DB: "pg://${POSTGRES_HOSTNAME}:5432?u=${POSTGRES_USERNAME}&p=${POSTGRES_PASSWORD}&d=${POSTGRES_DB}&application_name=libian-datalake-nocodb&sslmode=verify-full"
      NC_PUBLIC_URL: ${NC_PUBLIC_URL}
      NC_ADMIN_EMAIL: ${NC_ADMIN_EMAIL}
      NC_ADMIN_PASSWORD: ${NC_ADMIN_PASSWORD}
      NC_INVITE_ONLY_SIGNUP: true
      NC_DISABLE_TELE: true
      NC_SMTP_FROM: ${SMTP_SENDER}
      NC_SMTP_HOST: ${SMTP_SERVER}
      NC_SMTP_PORT: ${SMTP_PORT}
      NC_SMTP_USERNAME: ${SMTP_USERNAME}
      NC_SMTP_PASSWORD: ${SMTP_PASSWORD}
      NC_SMTP_SECURE: ${SMTP_SSL_JS_BOOL}
      <<: *env
    volumes:
      - "./volume/nc_data:/usr/app/data"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080/favicon.ico"]
      interval: 1m
      timeout: 20s
      retries: 5
      start_period: 5m
      start_interval: 30s
  pgadmin:
    env_file:
      - .env
    ports:
      - "18192:80"
    depends_on:
      nocodb:
        condition: service_healthy
    image: dpage/pgadmin4:9.1
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_MY_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_MY_PASSWORD}
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: "False"
      PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: "False"
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
      PGADMIN_CONFIG_MAX_LOGIN_ATTEMPTS: 15
      PGADMIN_CONFIG_CHECK_EMAIL_DELIVERABILITY: "True"
      <<: *env
    volumes:
      - "./volume/pgadmin_data:/var/lib/pgadmin"
      - "./volume/pgadmin_config/servers.json:/pgadmin4/servers.json"
      - "./volume/pgadmin_config/pgpass:/home/pgadmin/.pgpass"
      - "./volume/pgadmin_config/config_local.py:/pgadmin4/config_local.py"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:80"]
      interval: 1m
      timeout: 20s
      retries: 5
      start_period: 30m
      start_interval: 30s